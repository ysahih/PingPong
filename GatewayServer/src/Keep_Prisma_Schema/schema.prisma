generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int            @id @default(autoincrement())
    firstName String?
    lastname  String?
    username  String         @unique
    rooms     UserRoom[]
    messages  Message[]
    conv      Converstaion[]
}

model Converstaion {
    id       Int       @id @default(autoincrement())
    users    User[]
    messages Message[]
}

model Room {
    id   Int      @id @default(autoincrement())
    name String   @unique
    type ROOMTYPE @default(PUBLIC)

    users    UserRoom[]
    messages Message[]
}

model Message {
    id        Int           @id @default(autoincrement())
    content   String
    createdAt DateTime      @default(now())
    room      Room?         @relation(fields: [roomId], references: [id])
    roomId    Int?
    conv      Converstaion? @relation(fields: [convId], references: [id])
    convId    Int?
    user      User          @relation(fields: [userId], references: [id])
    userId    Int
}

model UserRoom {
    id       Int      @id @default(autoincrement())
    user     User     @relation(fields: [userId], references: [id])
    userId   Int
    room     Room     @relation(fields: [roomId], references: [id])
    roomId   Int
    userRole ROLE     @default(USER)
    joinedAt DateTime @default(now())

    @@unique([userId, roomId])
}

enum ROLE {
    USER
    ADMIN
    OWNER
}

enum ROOMTYPE {
    PUBLIC
    PROTECTED
    PRIVATE
}
